import{_ as n,c as s,o as a,a as t}from"./app.ef7d15e7.js";const f='{"title":"JS\u539F\u7406\u57FA\u78402","description":"","frontmatter":{"date":"2021-05-17T00:00:00.000Z","title":"JS\u539F\u7406\u57FA\u78402","tags":[null],"describe":null},"headers":[{"level":3,"title":"7.3 Async\u548CAwait","slug":"_7-3-async\u548Cawait"},{"level":3,"title":"7.5 Promise","slug":"_7-5-promise"},{"level":3,"title":"7.6 \u539F\u578B\u94FE\u4E0E\u7EE7\u627F","slug":"_7-6-\u539F\u578B\u94FE\u4E0E\u7EE7\u627F"},{"level":3,"title":"7.7 bind\u3001apply\u3001call","slug":"_7-7-bind\u3001apply\u3001call"},{"level":2,"title":"8. \u51FD\u6570\u8282\u6D41\u548C\u9632\u6296","slug":"_8-\u51FD\u6570\u8282\u6D41\u548C\u9632\u6296"},{"level":3,"title":"8.1 \u9632\u6296 (debounce)","slug":"_8-1-\u9632\u6296-debounce"},{"level":3,"title":"8.2 \u8282\u6D41(throttle)","slug":"_8-2-\u8282\u6D41-throttle"},{"level":3,"title":"8.3 \u5176\u4ED6","slug":"_8-3-\u5176\u4ED6"},{"level":2,"title":"JS \u624B\u5199","slug":"js-\u624B\u5199"},{"level":2,"title":"\u624B\u5199 Promise","slug":"\u624B\u5199-promise"}],"relativePath":"basics/reviewJS23.md","lastUpdated":1643984519151}',p={},o=t(`<h1 id="\u57FA\u7840\u6C47\u603B2" tabindex="-1">\u57FA\u7840\u6C47\u603B2 <a class="header-anchor" href="#\u57FA\u7840\u6C47\u603B2" aria-hidden="true">#</a></h1><h3 id="_7-3-async\u548Cawait" tabindex="-1">7.3 Async\u548CAwait <a class="header-anchor" href="#_7-3-async\u548Cawait" aria-hidden="true">#</a></h3><p>async function \u7528\u4E8E\u7533\u660E\u4E00\u4E2A function \u662F\u5F02\u6B65\u7684\uFF1B await\uFF0C\u7528\u4E8E\u7B49\u5F85\u4E00\u4E2A\u5F02\u6B65\u65B9\u6CD5\u6267\u884C\u5B8C\u6210\uFF1Basync/await\u662F\u4E00\u4E2A\u7528\u540C\u6B65\u601D\u7EF4\u89E3\u51B3\u5F02\u6B65\u95EE\u9898\u7684\u65B9\u6848\u3002</p><p>async\u51FD\u6570\u8FD4\u56DE\u7684\u662F\u4E00\u4E2APromise\u3002\u5982\u679C\u4E00\u4E2Aasync\u51FD\u6570\u7684\u8FD4\u56DE\u503C\u4E0D\u662Fpromise\uFF0C\u90A3\u4E48\u5B83\u5C06\u4F1A\u88AB\u9690\u5F0F\u5730\u5305\u88C5\u5728\u4E00\u4E2Apromise\u4E2D\uFF0C\u53EF\u4EE5\u4F7F\u7528then\u65B9\u6CD5\u6DFB\u52A0\u56DE\u8C03\u51FD\u6570\u3002\u5982\u679C\u6CA1\u6709\u5728async\u51FD\u6570\u4E2D\u5199return,\u90A3\u4E48promise\u5BF9\u8C61resolve\u7684\u503C\u5C31\u662Fundefined</p><p>await \u540E\u9762\u63A5 expression, \u8FD4\u56DE\u503C\u4E3Aexpression\u7684\u503C\u3002await\u8868\u8FBE\u5F0F\u4F1A\u6682\u505C\u6574\u4E2Aasync\u51FD\u6570\u7684\u6267\u884C\u8FDB\u7A0B\u5E76\u51FA\u8BA9\u5176\u63A7\u5236\u6743\u3002\u5F53await\u540E\u9762\u7684\u51FD\u6570\u4E3Apromise\u65F6\uFF0C\u8981\u7B49resolve\u6216reject\u8FD4\u56DE\u4E4B\u540E\u624D\u4F1A\u6062\u590D\u8FDB\u7A0B\uFF0Cpromise\u8FD4\u56DE\u503C\u4F1A\u4F5C\u4E3Aawait\u8868\u8FBE\u5F0F\u7684\u8FD4\u56DE\u7ED3\u679C\u3002\u5F53await\u540E\u9762\u7684\u51FD\u6570\u65E0\u8FD4\u56DE\u503C\u65F6\u8868\u8FBE\u5F0F\u7ED3\u679C\u4E3Aundefined\u3002\u5982\u679C\u51FD\u6570\u4F53\u5185\u6709\u4E00\u4E2Aawait\u8868\u8FBE\u5F0F\uFF0Casync\u51FD\u6570\u5C31\u4E00\u5B9A\u4F1A\u5F02\u6B65\u6267\u884C\u3002\u5728await\u8868\u8FBE\u5F0F\u4E4B\u540E\u7684\u4EE3\u7801\u53EF\u4EE5\u88AB\u8BA4\u4E3A\u662F\u5B58\u5728\u5728\u94FE\u5F0F\u8C03\u7528\u7684then\u56DE\u8C03\u4E2D\uFF0C\u591A\u4E2Aawait\u8868\u8FBE\u5F0F\u90FD\u5C06\u52A0\u5165\u94FE\u5F0F\u8C03\u7528\u7684then\u56DE\u8C03\u4E2D\uFF0C\u8FD4\u56DE\u503C\u5C06\u4F5C\u4E3A\u6700\u540E\u4E00\u4E2Athen\u56DE\u8C03\u7684\u8FD4\u56DE\u503C</p><h3 id="_7-5-promise" tabindex="-1">7.5 Promise <a class="header-anchor" href="#_7-5-promise" aria-hidden="true">#</a></h3><p>promise\u662F\u4E00\u4E2A\u5BF9\u8C61\uFF0C\u662F\u5F02\u6B65\u7F16\u7A0B\u7684\u4E00\u79CD\u89E3\u51B3\u65B9\u6848\uFF0C\u901A\u8FC7\u94FE\u5F0F\u8C03\u7528\u89E3\u51B3\u56DE\u8C03\u5730\u72F1\u95EE\u9898\u3002</p><p>\u6BCF\u4E2Apromise\u6709\u4E09\u79CD\u72B6\u6001\uFF0Cpending\u7B49\u5F85\u6001,fulfilled\u6210\u529F\u6001\uFF0Crejected\u5931\u8D25\u6001\u3002\u4E00\u4E2A promise \u5BF9\u8C61\u53EA\u80FD\u6539\u53D8\u4E00\u6B21\u3002\u65E0\u8BBA\u6210\u529F\u8FD8\u662F\u5931\u8D25\uFF0C\u90FD\u4F1A\u6709\u4E00\u4E2A\u7ED3\u679C\u6570\u636E\u3002\u6210\u529F\u7684\u7ED3\u679C\u6570\u636E\u4E00\u822C\u79F0\u4E3A value\uFF0C\u800C\u5931\u8D25\u7684\u4E00\u822C\u79F0\u4E3A reason\u3002</p><p><strong>\u624B\u5199promise</strong></p><div class="language-js"><pre><code><span class="token keyword">function</span> <span class="token function">myPromise</span><span class="token punctuation">(</span><span class="token parameter">exector</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token keyword">const</span> self <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>state <span class="token operator">=</span> <span class="token string">&#39;pending&#39;</span><span class="token punctuation">;</span>   <span class="token comment">// promise\u72B6\u6001</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>value<span class="token punctuation">;</span>               <span class="token comment">//promise\u7684\u503C</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>onFullfilledCb <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">//\u5B58\u50A8then\u65B9\u6CD5\u4E2D\u6CE8\u518C\u7684\u56DE\u8C03\u51FD\u6570(\u7B2C\u4E00\u4E2A\u53C2\u6570)</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>onRejectedCb <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>   <span class="token comment">//\u5B58\u50A8then\u65B9\u6CD5\u4E2D\u6CE8\u518C\u7684\u56DE\u8C03\u51FD\u6570(\u7B2C\u4E8C\u4E2A\u53C2\u6570)</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>reason <span class="token operator">=</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span>         <span class="token comment">//\u5931\u8D25\u539F\u56E0</span>

  <span class="token keyword">try</span><span class="token punctuation">{</span>
    <span class="token function">exector</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// exector(resolve.bind(this), reject.bind(this))</span>
  <span class="token punctuation">}</span><span class="token function">cacth</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
    <span class="token function">reject</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  
  <span class="token comment">//\u6210\u529F\u6267\u884C</span>
  <span class="token keyword">function</span> <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>state <span class="token operator">===</span> <span class="token string">&#39;pending&#39;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>   <span class="token comment">//\u7528bind\u4E4B\u540E,\u53EF\u4F7F\u7528this</span>
      self<span class="token punctuation">.</span>state <span class="token operator">=</span> <span class="token string">&#39;fullfilled&#39;</span><span class="token punctuation">;</span>
      self<span class="token punctuation">.</span>value <span class="token operator">=</span> value<span class="token punctuation">;</span>
      self<span class="token punctuation">.</span>onFullfilledCb<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">fn</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token comment">//\u5931\u8D25\u6267\u884C</span>
  <span class="token keyword">function</span> <span class="token function">reject</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>state <span class="token operator">===</span> <span class="token string">&#39;pending&#39;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      self<span class="token punctuation">.</span>state <span class="token operator">=</span> <span class="token string">&#39;rejected&#39;</span><span class="token punctuation">;</span>
      self<span class="token punctuation">.</span>reason <span class="token operator">=</span> e<span class="token punctuation">;</span>
      self<span class="token punctuation">.</span>onRejectedCb<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">fn</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span> <span class="token function">fn</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  
<span class="token punctuation">}</span>

</code></pre></div><p><strong>\u624B\u5199 Promise.then</strong></p><div class="language-js"><pre><code>myPromise<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">then</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">onFullfiled<span class="token punctuation">,</span> onRejected</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token keyword">const</span> self <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>state <span class="token operator">===</span> <span class="token string">&#39;fullfiled&#39;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token function">onFullfiled</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>state <span class="token operator">===</span> <span class="token string">&#39;rejected&#39;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token function">onRejected</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>reason<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>state <span class="token operator">===</span> <span class="token string">&#39;pending&#39;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>onFullfilledCb<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span> <span class="token function">onFullfiled</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>value <span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>onRejected<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span> <span class="token function">onRejectedCb</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>reason <span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  
<span class="token punctuation">}</span>
</code></pre></div><p><strong>\u624B\u5199Promise.all</strong></p><div class="language-js"><pre><code>myPromise<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">all</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">promiseArray</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">myPromise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
    <span class="token keyword">let</span> resultCount <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> resultArray <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span>promiseArray<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span>promise<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>promise<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>    <span class="token comment">//Promise.resolve \u7528\u4E8E\u5904\u7406\u6570\u7EC4\u4E2D\u53C2\u6570\u4E3A \u975Epromise</span>
        resultCount<span class="token operator">++</span><span class="token punctuation">;</span>
        resultArray<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> res<span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>resultCount <span class="token operator">===</span> promise<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">{</span>
          <span class="token function">resolve</span><span class="token punctuation">(</span>resultArray<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token parameter">error</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span><span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre></div><p>Promise.all \u5165\u53C2\u53EF\u4EE5\u4E0D\u662F\u6570\u7EC4\uFF0C\u5F53\u5176\u4E2D\u4E00\u4E2A\u4EFB\u52A1\u62A5\u9519\u65F6\uFF0C\u5176\u4ED6\u8FD8\u4F1A\u6B63\u5E38\u6267\u884C</p><h3 id="_7-6-\u539F\u578B\u94FE\u4E0E\u7EE7\u627F" tabindex="-1">7.6 \u539F\u578B\u94FE\u4E0E\u7EE7\u627F <a class="header-anchor" href="#_7-6-\u539F\u578B\u94FE\u4E0E\u7EE7\u627F" aria-hidden="true">#</a></h3><h4 id="_7-6-1-\u6784\u9020\u51FD\u6570constructor" tabindex="-1">7.6.1 \u6784\u9020\u51FD\u6570constructor <a class="header-anchor" href="#_7-6-1-\u6784\u9020\u51FD\u6570constructor" aria-hidden="true">#</a></h4><p>\u6BCF\u4E2A\u7C7B\u90FD\u6709\u4E00\u4E2A\u9ED8\u8BA4\u65E0\u53C2\u7684\u6784\u9020\u51FD\u6570\uFF0C\u521D\u59CB\u5316\u8BE5\u7C7B(new)\u7684\u65F6\u5019\uFF0C\u5148\u8D70\u6784\u9020\u51FD\u6570\uFF0C\u7528\u4E8E\u521D\u59CB\u5316\u6210\u5458\u53D8\u91CF\u548C\u65B9\u6CD5\u3002</p><pre><code>\u5728\u6784\u9020\u51FD\u6570\u4E2D\u4F7F\u7528\u65F6\uFF0Csuper\u5173\u952E\u5B57\u5C06\u5355\u72EC\u51FA\u73B0\uFF0C\u5E76\u4E14\u5FC5\u987B\u5728\u4F7F\u7528this\u5173\u952E\u5B57\u4E4B\u524D\u4F7F\u7528\u3002
super\u5173\u952E\u5B57\u4E5F\u53EF\u4EE5\u7528\u6765\u8C03\u7528\u7236\u5BF9\u8C61\u4E0A\u7684\u51FD\u6570\u3002
\u9ED8\u8BA4\u65E0\u53C2\u6784\u9020\u51FD\u6570\u65F6, JS\u4F1A\u81EA\u52A8\u5728\u7B2C\u4E00\u884C\u6DFB\u52A0super()\u51FD\u6570\uFF0C\u53EF\u4EE5\u4E0D\u7528\b\u624B\u52A8\u6DFB\u52A0\uFF1B
\u81EA\u5B9A\u4E49\u6784\u9020\u51FD\u6570\u65F6\uFF0C\u9700\u8981\u624B\u52A8\u8C03\u7528super\u51FD\u6570, \u5426\u5219\u4F1A\u62A5\u9519\u3002
</code></pre><p>\u6784\u9020\u51FD\u6570\u5206\u4E3A \u5B9E\u4F8B\u6210\u5458 \u548C \u9759\u6001\u6210\u5458</p><ul><li>\u5B9E\u4F8B\u6210\u5458\uFF1A\u5B9E\u4F8B\u6210\u5458\u5C31\u662F\u5728\u6784\u9020\u51FD\u6570\u5185\u90E8\uFF0C\u901A\u8FC7this\u6DFB\u52A0\u7684\u6210\u5458\u3002\u5B9E\u4F8B\u6210\u5458\u53EA\u80FD\u901A\u8FC7\u5B9E\u4F8B\u5316\u7684\u5BF9\u8C61\u6765\u8BBF\u95EE\u3002</li><li>\u9759\u6001\u6210\u5458\uFF1A\u5728\u6784\u9020\u51FD\u6570\u672C\u8EAB\u4E0A\u6DFB\u52A0\u7684\u6210\u5458\uFF0C\u53EA\u80FD\u901A\u8FC7\u6784\u9020\u51FD\u6570\u6765\u8BBF\u95EE\u3002</li></ul><p>\u6784\u9020\u51FD\u6570.prototype ==&gt; \u5B9E\u4F8B\u539F\u578B \u5B9E\u4F8B\u539F\u578B.constructor ==&gt; \u6784\u9020\u51FD\u6570</p><div class="language-js"><pre><code><span class="token keyword">function</span> <span class="token function">Star</span><span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span>age</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span> <span class="token comment">//\u5B9E\u4F8B\u6210\u5458</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age<span class="token punctuation">;</span>   <span class="token comment">//\u5B9E\u4F8B\u6210\u5458</span>
<span class="token punctuation">}</span>
<span class="token comment">//\u9759\u6001\u6210\u5458</span>
Star<span class="token punctuation">.</span>sex <span class="token operator">=</span> <span class="token string">&#39;\u5973&#39;</span><span class="token punctuation">;</span>
</code></pre></div><p><strong>new\u4E00\u4E2A\u65B0\u5BF9\u8C61\u7684\u8FC7\u7A0B\uFF0C\u53D1\u751F\u4E86\u4EC0\u4E48\uFF1F</strong></p><pre><code>(1) \u521B\u5EFA\u7A7A\u5BF9\u8C61 son {}
(2) \u51C6\u5907\u539F\u578B\u94FE\u8FDE\u63A5son.__proto__ = Father.prototype
(3) \u91CD\u65B0\u7ED1\u5B9Athis\uFF0C\u4F7F\u6784\u9020\u51FD\u6570\u7684this\u6307\u5411\u65B0\u5BF9\u8C61Father.call(this)
(4) \u4E3A\u65B0\u5BF9\u8C61\u5C5E\u6027\u8D4B\u503Cson.name
(5) \u8FD4\u56DEthis return this\uFF0C\u6B64\u65F6\u7684\u65B0\u5BF9\u8C61\u5C31\u62E5\u6709\u4E86\u6784\u9020\u51FD\u6570\u7684\u65B9\u6CD5\u548C\u5C5E\u6027\u4E86
</code></pre><h4 id="_7-6-2-\u539F\u578B" tabindex="-1">7.6.2 \u539F\u578B <a class="header-anchor" href="#_7-6-2-\u539F\u578B" aria-hidden="true">#</a></h4><p>\u6BCF\u4E00\u4E2Ajavascript\u5BF9\u8C61(\u9664null\u5916)\u521B\u5EFA\u7684\u65F6\u5019\uFF0C\u90FD\u4F1A\u4E0E\u4E4B\u5173\u8054\u53E6\u4E00\u4E2A\u5BF9\u8C61\uFF08\u7236\u7C7B\u5BF9\u8C61\uFF09\uFF0C\u8FD9\u4E2A\u7236\u7C7B\u5BF9\u8C61\u5C31\u662F\u6211\u4EEC\u6240\u8BF4\u7684\u539F\u578B\uFF0C\u6BCF\u4E00\u4E2A\u5BF9\u8C61\u90FD\u4F1A\u4ECE\u539F\u578B\u4E2D\u201C\u7EE7\u627F\u201D\u5C5E\u6027\u3002</p><pre><code>MDN:
  \u6BCF\u4E2A\u5BF9\u8C61\u62E5\u6709\u4E00\u4E2A\u539F\u578B\u5BF9\u8C61\uFF0C\u5BF9\u8C61\u4EE5\u5176\u539F\u578B\u4E3A\u6A21\u677F\u3001\u4ECE\u539F\u578B\u7EE7\u627F\u65B9\u6CD5\u548C\u5C5E\u6027\u3002
  \u539F\u578B\u5BF9\u8C61\u4E5F\u53EF\u80FD\u62E5\u6709\u539F\u578B\uFF0C\u5E76\u4ECE\u4E2D\u7EE7\u627F\u65B9\u6CD5\u548C\u5C5E\u6027\uFF0C\u4E00\u5C42\u4E00\u5C42\u3001\u4EE5\u6B64\u7C7B\u63A8\u3002
  \u8FD9\u79CD\u5173\u7CFB\u5E38\u88AB\u79F0\u4E3A\u539F\u578B\u94FE (prototype chain)\uFF0C\u5B83\u89E3\u91CA\u4E86\u4E3A\u4F55\u4E00\u4E2A\u5BF9\u8C61\u4F1A\u62E5\u6709\u5B9A\u4E49\u5728\u5176\u4ED6\u5BF9\u8C61\u4E2D\u7684\u5C5E\u6027\u548C\u65B9\u6CD5\u3002
</code></pre><ul><li><strong>\u5BF9\u8C61\u7684\u539F\u578Bprototype</strong> \u3010\u53EF\u4EE5\u901A\u8FC7Object.getPrototypeOf(obj)\u6216obj.__proto__\u83B7\u5F97\u3011\u662F\u6BCF\u4E2A\u5B9E\u4F8B\u90FD\u6709\u7684\u5C5E\u6027<br></li><li><strong>\u6784\u9020\u51FD\u6570\u7684prototype\u5C5E\u6027</strong> \u662F\u6784\u9020\u51FD\u6570\u7684\u5C5E\u6027\u3002JS\u5B9E\u73B0\u7C7B\uFF0C\u662F\u5728 \u201C...\u5728\u5BF9\u8C61\u5B9E\u4F8B\u548C\u5B83\u7684\u6784\u9020\u5668\u4E4B\u95F4\u5EFA\u7ACB\u4E00\u4E2A\u94FE\u63A5\uFF08\u5B83\u662F__proto__\u5C5E\u6027\uFF0C\u662F\u4ECE\u6784\u9020\u51FD\u6570\u7684prototype\u5C5E\u6027\u6D3E\u751F\u7684\uFF09\uFF0C\u4E4B\u540E\u901A\u8FC7\u4E0A\u6EAF\u539F\u578B\u94FE\uFF0C\u5728\u6784\u9020\u5668\u4E2D\u627E\u5230\u8FD9\u4E9B\u5C5E\u6027\u548C\u65B9\u6CD5\u3002\u201D(MDN)</li></ul><p>JS\u4E2D\uFF0C\u6BCF\u4E2A\u51FD\u6570\u90FD\u6709\u4E00\u4E2Aprototype\u5C5E\u6027\uFF0C\u8FD9\u4E2A\u5C5E\u6027\u6307\u5411\u51FD\u6570\u7684\u539F\u578B\u5BF9\u8C61\u3002</p><p>_<em>proto</em>_ \u662F\u6BCF\u4E2A\u5BF9\u8C61\u90FD\u6709\u7684\u5C5E\u6027, \u5927\u591A\u6570\u60C5\u51B5\u4E0B\uFF0C_<em>proto__\u53EF\u4EE5\u7406\u89E3\u4E3A\u201C\u6784\u9020\u5668\u7684\u539F\u578B\u201D\uFF0C\u4F46\u662F\u901A\u8FC7 Object.create()\u521B\u5EFA\u7684\u5BF9\u8C61\u6709\u53EF\u80FD\u4E0D\u662F\uFF0C Object.create()\u65B9\u6CD5\u521B\u5EFA\u4E00\u4E2A\u65B0\u5BF9\u8C61\uFF0C\u4F7F\u7528\u73B0\u6709\u7684\u5BF9\u8C61\u6765\u63D0\u4F9B\u65B0\u521B\u5EFA\u7684\u5BF9\u8C61\u7684__proto</em>_\u3002</p><div class="language-js"><pre><code>  __proto__ <span class="token operator">===</span> constructor<span class="token punctuation">.</span>prototype

  <span class="token keyword">let</span> a1 <span class="token operator">=</span> <span class="token punctuation">{</span> a<span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> a2 <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>a1<span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;a2.__proto__:&quot;</span><span class="token punctuation">,</span> a2<span class="token punctuation">.</span>__proto__<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//Object {a: 1}</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a2<span class="token punctuation">.</span>__proto__ <span class="token operator">===</span> a1<span class="token punctuation">.</span>constructor<span class="token punctuation">.</span>prototype<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//false</span>
  <span class="token keyword">let</span> a3 <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>a1<span class="token punctuation">.</span>__proto__<span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;a3.__proto__&quot;</span><span class="token punctuation">,</span>a3<span class="token punctuation">.</span>__proto__<span class="token punctuation">)</span><span class="token punctuation">;</span> 
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a3<span class="token punctuation">.</span>__proto__ <span class="token operator">===</span> a1<span class="token punctuation">.</span>constructor<span class="token punctuation">.</span>prototype<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//true</span>
</code></pre></div><h4 id="_7-6-3-\u539F\u578B\u94FE" tabindex="-1">7.6.3 \u539F\u578B\u94FE <a class="header-anchor" href="#_7-6-3-\u539F\u578B\u94FE" aria-hidden="true">#</a></h4><p>\u539F\u578B\u4E0E\u539F\u578B\u4E4B\u95F4\u901A\u8FC7__proto__\u5C42\u5C42\u4E32\u8D77\u6765\u7684\u76F4\u5230Object.prototype.__proto__\u4E3Anull\u7684\u94FE\u53EB\u505A\u539F\u578B\u94FE</p><p><img src="https://upload-images.jianshu.io/upload_images/1490251-3089c135df71c956.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/604/format/webp" alt="avatar"></p><h4 id="_7-6-4-\u7EE7\u627F" tabindex="-1">7.6.4 \u7EE7\u627F <a class="header-anchor" href="#_7-6-4-\u7EE7\u627F" aria-hidden="true">#</a></h4><p>\u7EE7\u627F\u65B9\u5F0F</p><p>\u539F\u578B\u94FE\u7EE7\u627F\u3001\u6784\u9020\u51FD\u6570\u7EE7\u627F\u3001\u539F\u578B\u94FE+\u501F\u7528\u6784\u9020\u51FD\u6570\u7684\u7EC4\u5408\u7EE7\u627F\u3001ES6\u4E2Dclass \u7684\u7EE7\u627F\u3001\u7EC4\u5408\u7EE7\u627F\u4F18\u53161\u3001\u7EC4\u5408\u7EE7\u627F\u4F18\u53162</p><ul><li><ol><li>\u539F\u578B\u94FE\u7EE7\u627F</li></ol><p>Student.prototype = new Person() // \u5B50\u7C7B\u578B\u7684\u539F\u578B\u4E3A\u7236\u7C7B\u578B\u7684\u4E00\u4E2A\u5B9E\u4F8B\u5BF9\u8C61</p><p>\u7279\u70B9\uFF1A\u7236\u7C7B\u65B0\u589E\u539F\u578B\u65B9\u6CD5/\u539F\u578B\u5C5E\u6027\uFF0C\u5B50\u7C7B\u90FD\u80FD\u8BBF\u95EE\u5230; \u7B80\u5355\uFF0C\u6613\u4E8E\u5B9E\u73B0;</p><p>\u7F3A\u70B9:</p><ul><li>\u65E0\u6CD5\u5B9E\u73B0\u591A\u7EE7\u627F;</li><li>\u6765\u81EA\u539F\u578B\u5BF9\u8C61\u7684\u6240\u6709\u5C5E\u6027\u88AB\u6240\u6709\u5B9E\u4F8B\u5171\u4EAB</li><li>\u521B\u5EFA\u5B50\u7C7B\u5B9E\u4F8B\u65F6\uFF0C\u65E0\u6CD5\u5411\u7236\u7C7B\u6784\u9020\u51FD\u6570\u4F20\u53C2</li><li>\u8981\u60F3\u4E3A\u5B50\u7C7B\u65B0\u589E\u5C5E\u6027\u548C\u65B9\u6CD5\uFF0C\u5FC5\u987B\u8981\u5728Student.prototype = new Person() \u4E4B\u540E\u6267\u884C\uFF0C\u4E0D\u80FD\u653E\u5230\u6784\u9020\u5668\u4E2D</li></ul></li><li><ol start="2"><li>\u6784\u9020\u51FD\u6570\u7EE7\u627F</li></ol><div class="language-js"><pre><code><span class="token keyword">function</span> <span class="token function">Student</span><span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span> age<span class="token punctuation">,</span> price</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">Person</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> name<span class="token punctuation">,</span> age<span class="token punctuation">)</span>  <span class="token comment">//\u5728\u5B50\u7C7B\u578B\u6784\u9020\u51FD\u6570\u4E2D\u901A\u7528call()\u8C03\u7528\u7236\u7C7B\u578B\u6784\u9020\u51FD\u6570</span>
  <span class="token operator">...</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u7279\u70B9\uFF1A</p><ul><li>\u89E3\u51B3\u4E86\u539F\u578B\u94FE\u7EE7\u627F\u4E2D\u5B50\u7C7B\u5B9E\u4F8B\u5171\u4EAB\u7236\u7C7B\u5F15\u7528\u5C5E\u6027\u7684\u95EE\u9898</li><li>\u521B\u5EFA\u5B50\u7C7B\u5B9E\u4F8B\u65F6\uFF0C\u53EF\u4EE5\u5411\u7236\u7C7B\u4F20\u9012\u53C2\u6570</li><li>\u53EF\u4EE5\u5B9E\u73B0\u591A\u7EE7\u627F(call\u591A\u4E2A\u7236\u7C7B\u5BF9\u8C61)</li></ul><p>\u7F3A\u70B9\uFF1A</p><ul><li>\u5B9E\u4F8B\u5E76\u4E0D\u662F\u7236\u7C7B\u7684\u5B9E\u4F8B\uFF0C\u53EA\u662F\u5B50\u7C7B\u7684\u5B9E\u4F8B</li><li>\u53EA\u80FD\u7EE7\u627F\u7236\u7C7B\u7684\u5B9E\u4F8B\u5C5E\u6027\u548C\u65B9\u6CD5\uFF0C\u4E0D\u80FD\u7EE7\u627F\u539F\u578B\u5C5E\u6027\u548C\u65B9\u6CD5</li><li>\u65E0\u6CD5\u5B9E\u73B0\u51FD\u6570\u590D\u7528\uFF0C\u6BCF\u4E2A\u5B50\u7C7B\u90FD\u6709\u7236\u7C7B\u5B9E\u4F8B\u51FD\u6570\u7684\u526F\u672C\uFF0C\u5F71\u54CD\u6027\u80FD</li></ul></li><li><ol start="3"><li>\u539F\u578B\u94FE+\u501F\u7528\u6784\u9020\u51FD\u6570\u7684\u7EC4\u5408\u7EE7\u627F</li></ol><div class="language-js"><pre><code><span class="token keyword">function</span> <span class="token function">Person</span> <span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span> age</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">,</span>
<span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age<span class="token punctuation">,</span>
<span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function-variable function">setAge</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token class-name">Person</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">setAge</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;111&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">Student</span> <span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span> age<span class="token punctuation">,</span> price</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">Person</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> name<span class="token punctuation">,</span> age<span class="token punctuation">)</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>price <span class="token operator">=</span> price
  <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function-variable function">setScore</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token class-name">Student</span><span class="token punctuation">.</span>prototype <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token class-name">Student</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>constructor <span class="token operator">=</span> Student<span class="token comment">//\u7EC4\u5408\u7EE7\u627F\u4E5F\u662F\u9700\u8981\u4FEE\u590D\u6784\u9020\u51FD\u6570\u6307\u5411\u7684</span>
<span class="token class-name">Student</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">sayHello</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>
<span class="token keyword">var</span> s1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Student</span><span class="token punctuation">(</span><span class="token string">&#39;Tom&#39;</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">15000</span><span class="token punctuation">)</span>
<span class="token keyword">var</span> s2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Student</span><span class="token punctuation">(</span><span class="token string">&#39;Jack&#39;</span><span class="token punctuation">,</span> <span class="token number">22</span><span class="token punctuation">,</span> <span class="token number">14000</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>s1<span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>s1<span class="token punctuation">.</span>constructor<span class="token punctuation">)</span> <span class="token comment">//Student</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>p1<span class="token punctuation">.</span>constructor<span class="token punctuation">)</span> <span class="token comment">//Person    </span>
</code></pre></div><p>\u4F18\u70B9\uFF1A</p><ul><li>\u53EF\u4EE5\u7EE7\u627F\u5B9E\u4F8B\u5C5E\u6027/\u65B9\u6CD5\uFF0C\u4E5F\u53EF\u4EE5\u7EE7\u627F\u539F\u578B\u5C5E\u6027/\u65B9\u6CD5</li><li>\u4E0D\u5B58\u5728\u5F15\u7528\u5C5E\u6027\u5171\u4EAB\u95EE\u9898</li><li>\u53EF\u4F20\u53C2</li><li>\u51FD\u6570\u53EF\u590D\u7528</li></ul><p>\u7F3A\u70B9\uFF1A</p><ul><li>\u8C03\u7528\u4E86\u4E24\u6B21\u7236\u7C7B\u6784\u9020\u51FD\u6570\uFF0C\u751F\u6210\u4E86\u4E24\u4EFD\u5B9E\u4F8B</li></ul></li></ul><h3 id="_7-7-bind\u3001apply\u3001call" tabindex="-1">7.7 bind\u3001apply\u3001call <a class="header-anchor" href="#_7-7-bind\u3001apply\u3001call" aria-hidden="true">#</a></h3><p>call\u3001apply(\u7B2C\u4E8C\u4E2A\u53C2\u6570\u662F\u4E00\u4E2A\u53C2\u6570\u6570\u7EC4)\u3001bind\u90FD\u662F\u6539\u53D8this\u6307\u5411\u7684\u65B9\u6CD5\u3002call\u3001apply\u7ACB\u5373\u8C03\u7528\uFF0Cbind\u8FD4\u56DE\u7ED1\u5B9A\u51FD\u6570\u3002</p><p>\u6CE8\u610F\u5F02\u5E38\u5904\u7406\u3001fn = this\u627E\u5230\u8981\u6267\u884C\u7684\u51FD\u6570\u3001\u8FD4\u56DE\u51FD\u6570\u6267\u884C\u7ED3\u679C</p><p><strong>\u624B\u5199 apply</strong></p><div class="language-js"><pre><code><span class="token class-name">Function</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">_Apply</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">content <span class="token operator">=</span> window<span class="token punctuation">,</span> args <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment">//\u7ED9content\u548Cargs\u6DFB\u52A0\u9ED8\u8BA4\u503C</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">(</span>args <span class="token keyword">instanceof</span> <span class="token class-name">Object</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment">// \u5982\u679C\u7B2C\u4E8C\u4E2A\u53C2\u6570\u4E0D\u662F\u5BF9\u8C61\u7684\u5B9E\u4F8B,\u5C31\u8FD4\u56DE\u4E00\u4E2A\u9519\u8BEF</span>
      <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">TypeError</span><span class="token punctuation">(</span><span class="token string">&#39;Create List From Array Like called on non-object&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">const</span> fn <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//\u6307\u5B9A\u552F\u4E00\u5C5E\u6027\uFF0C\u9632\u6B62delete\u5220\u9664\u9519\u8BEF</span>
  <span class="token comment">// \u663E\u793A\u7ED1\u5B9A\u51FD\u6570this</span>
  content<span class="token punctuation">.</span>fn <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
  <span class="token comment">// \u6267\u884Cfn\u65B9\u6CD5,\u5E76\u63A5\u53D7\u8FD4\u56DE\u503C</span>
  <span class="token keyword">const</span> res <span class="token operator">=</span> arguments<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">?</span> content<span class="token punctuation">.</span><span class="token function">fn</span><span class="token punctuation">(</span><span class="token operator">...</span>arguments<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">:</span> content<span class="token punctuation">.</span><span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">delete</span> content<span class="token punctuation">.</span>fn<span class="token punctuation">;</span><span class="token comment">// \u5220\u9664fn\u65B9\u6CD5</span>
  <span class="token keyword">return</span> res
<span class="token punctuation">}</span>
</code></pre></div><p><strong>\u624B\u5199 call</strong></p><div class="language-js"><pre><code><span class="token class-name">Function</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">Call</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">content<span class="token operator">=</span>window</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token comment">// \u7ED9\u6267\u884C\u4E0A\u4E0B\u6587 \u6DFB\u52A0\u9ED8\u8BA4\u503C</span>
  <span class="token keyword">const</span> fn <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//\u6307\u5B9A\u552F\u4E00\u5C5E\u6027\uFF0C\u9632\u6B62delete\u5220\u9664\u9519\u8BEF</span>
  content<span class="token punctuation">.</span>fn <span class="token operator">=</span> <span class="token keyword">this</span><span class="token comment">//\u7ED9 content \u6DFB\u52A0\u4E00\u4E2A\u65B9\u6CD5\u6307\u5411this\uFF1B\u663E\u793A\u7ED1\u5B9Athis</span>
  <span class="token comment">// \u83B7\u53D6\u7B2C\u4E00\u4E2A\u53C2\u6570\u4EE5\u540E\u7684\u6240\u6709\u53C2\u6570</span>
  <span class="token keyword">const</span> args <span class="token operator">=</span> Array<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>arguments<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// \u8C03\u7528\u4E0A\u4E0B\u6587\u7684fn\u5C5E\u6027, \u6B64\u65F6\u51FD\u6570\u7684this\u6307\u5411\u4E0A\u4E0B\u6587, \u4E5F\u5C31\u662F\u6211\u4EEC\u4F20\u5165\u7684content</span>
  <span class="token keyword">const</span> res <span class="token operator">=</span> arguments<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">1</span> <span class="token operator">?</span> content<span class="token punctuation">.</span><span class="token function">fn</span><span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token punctuation">)</span> <span class="token operator">:</span> content<span class="token punctuation">.</span><span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// \u5220\u9664\u4E0A\u4E0B\u6587\u7684content\u7684fn\u65B9\u6CD5, \u907F\u514D\u6C61\u67D3\u4E0A\u4E0B\u6587</span>
  <span class="token keyword">delete</span> content<span class="token punctuation">.</span>fn<span class="token punctuation">;</span>
  <span class="token keyword">return</span> res
<span class="token punctuation">}</span> 

\u6CE8\u610F<span class="token operator">:</span> \u53C2\u6570\u62FC\u63A5\u3001\u8FD4\u56DE\u51FD\u6570<span class="token operator">&lt;</span>br<span class="token operator">&gt;</span>
<span class="token keyword">new</span>\u8C03\u7528\u65F6<span class="token keyword">this</span>\u4E3Afn\u7684\u5B9E\u4F8B\uFF0C\u5426\u5219fn\u6267\u884C\u4E0A\u4E0B\u6587\u4E3A\u5165\u53C2context<span class="token operator">&lt;</span>br<span class="token operator">&gt;</span>
\u5173\u8054\u8FD4\u56DE\u51FD\u6570\u7684\u539F\u578B<span class="token punctuation">,</span> \u907F\u514D\u5728<span class="token keyword">this</span>\u4E0A\u76F4\u63A5\u64CD\u4F5C

</code></pre></div><p><strong>\u624B\u5199 bind</strong></p><div class="language-js"><pre><code><span class="token class-name">Function</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">bind</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> args <span class="token operator">=</span> <span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>arguments<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">var</span> context <span class="token operator">=</span> args<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">var</span> fn <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
  <span class="token keyword">var</span> <span class="token function-variable function">temp</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">var</span> <span class="token function-variable function">res</span> <span class="token operator">=</span>  <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">let</span> rest <span class="token operator">=</span> <span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>arguments<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment">// \u5982\u679Cnew\u88AB\u8C03\u7528, new\u7ED1\u5B9Athis\u4F18\u5148\u7EA7\u9AD8, this\u5E94\u8BE5\u6307\u5411fn\u7684\u5B9E\u4F8B </span>
      <span class="token comment">// new\u8FD0\u7B97\u7B26\u65F6 \u56E0\u4E3A\u7EF4\u62A4\u8FC7\u539F\u578B\uFF0C\u6240\u4EE5this\u65E2\u662Ftemp\u7684\u5B9E\u4F8B\uFF0C\u4E5F\u662Ffn\u7684\u5B9E\u4F8B</span>
      <span class="token keyword">return</span> <span class="token function">fn</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span> <span class="token keyword">instanceof</span> <span class="token class-name">temp</span> <span class="token operator">?</span> <span class="token keyword">this</span> <span class="token operator">:</span> context<span class="token punctuation">,</span> args<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>rest<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token comment">//\u7EF4\u62A4res\u7684\u539F\u578B, \u907F\u514D\u76F4\u63A5\u5728this\u4E0A\u64CD\u4F5C</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>prototype<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      temp<span class="token punctuation">.</span>prototype <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>prototype<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  res<span class="token punctuation">.</span>prototype <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">temp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> res<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><p><strong>\u624B\u5199 new</strong></p><p>new \u64CD\u4F5C\u8FD0\u7B97\u7B26</p><ul><li>\u521B\u5EFA\u4E00\u4E2A\u65B0\u7684\u5BF9\u8C61</li><li>\u7EE7\u627F\u7236\u7C7B\u539F\u578B\u4E0A\u7684\u65B9\u6CD5.</li><li>\u6DFB\u52A0\u7236\u7C7B\u7684\u5C5E\u6027\u5230\u65B0\u7684\u5BF9\u8C61\u4E0A\u5E76\u521D\u59CB\u5316. \u4FDD\u5B58\u65B9\u6CD5\u7684\u6267\u884C\u7ED3\u679C.</li><li>\u5982\u679C\u6267\u884C\u7ED3\u679C\u6709\u8FD4\u56DE\u503C\u5E76\u4E14\u662F\u4E00\u4E2A\u5BF9\u8C61, \u8FD4\u56DE\u6267\u884C\u7684\u7ED3\u679C, \u5426\u5219, \u8FD4\u56DE\u65B0\u521B\u5EFA\u7684\u5BF9\u8C61\u3002</li></ul><div class="language-js"><pre><code><span class="token keyword">function</span> <span class="token function">_new</span><span class="token punctuation">(</span><span class="token parameter">fn<span class="token punctuation">,</span><span class="token operator">...</span>rest</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token comment">//\u57FA\u4E8Efn\u7684prototype\u6784\u5EFA\u5BF9\u8C61\u7684\u539F\u578B</span>
  <span class="token keyword">const</span> thisObj <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>fn<span class="token punctuation">.</span>prototype<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">//\u5C06thisObj\u4F5C\u4E3Afn\u7684this\uFF0C\u7EE7\u627F\u5176\u5C5E\u6027\uFF0C\u5E76\u83B7\u53D6\u8FD4\u56DE\u7ED3\u679C\u4E3Aresult</span>
  <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token function">fn</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>thisObj<span class="token punctuation">,</span>rest<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">//\u6839\u636Eresult\u5BF9\u8C61\u7684\u7C7B\u578B\u51B3\u5B9A\u8FD4\u56DE\u7ED3\u679C, result \u901A\u8FC7Object.create\u521B\u5EFA\u662FObject\u7684\u5B9E\u4F8B</span>
  <span class="token comment">// \u6B63\u5E38\u89C4\u5B9A,\u5982\u4F55fn\u8FD4\u56DE\u7684\u662Fnull\u6216undefined(\u4E5F\u5C31\u662F\u4E0D\u8FD4\u56DE\u5185\u5BB9),\u6211\u4EEC\u8FD4\u56DE\u7684\u662Fobj,\u5426\u5219\u8FD4\u56DE result</span>
  <span class="token keyword">return</span> result <span class="token keyword">instanceof</span> <span class="token class-name">Object</span> <span class="token operator">?</span> result <span class="token operator">:</span> thisObj<span class="token punctuation">;</span>
  <span class="token comment">// \u6216\u8005\u7528\u4E0B\u9762\u65B9\u5F0F\u5224\u65AD</span>
  <span class="token comment">// const isObject = typeof res === &quot;object&quot; &amp;&amp; res !== null;</span>
  <span class="token comment">// const isFunction = typeof res === &quot;function&quot;;</span>
  <span class="token comment">// return isObject || isFunction ? res : obj;</span>
<span class="token punctuation">}</span>
</code></pre></div><p><strong>\u624B\u5199 instanceof</strong></p><div class="language-js"><pre><code><span class="token keyword">const</span> <span class="token function-variable function">myInstanceof</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">left<span class="token punctuation">,</span> right</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> left <span class="token operator">!==</span> <span class="token string">&quot;object&quot;</span> <span class="token operator">||</span> left <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">let</span> proto <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">getPrototypeOf</span><span class="token punctuation">(</span>left<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>proto <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>proto <span class="token operator">===</span> right<span class="token punctuation">.</span>prototype<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    proto <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">getPrototypeOf</span><span class="token punctuation">(</span>proto<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="_8-\u51FD\u6570\u8282\u6D41\u548C\u9632\u6296" tabindex="-1">8. \u51FD\u6570\u8282\u6D41\u548C\u9632\u6296 <a class="header-anchor" href="#_8-\u51FD\u6570\u8282\u6D41\u548C\u9632\u6296" aria-hidden="true">#</a></h2><p>\u4E3A\u4E86\u89E3\u51B3\u51FD\u6570\u9AD8\u9891\u7387\u89E6\u53D1\uFF0C\u6D4F\u89C8\u5668\u65E0\u6CD5\u6B63\u5E38\u54CD\u5E94\u7684\u60C5\u51B5\u3002 <a href="http://demo.nimius.net/debounce_throttle/" target="_blank" rel="noopener noreferrer">\u53EF\u89C6\u5316</a></p><h3 id="_8-1-\u9632\u6296-debounce" tabindex="-1">8.1 \u9632\u6296 (debounce) <a class="header-anchor" href="#_8-1-\u9632\u6296-debounce" aria-hidden="true">#</a></h3><p>\u51FD\u6570\u9632\u6296\uFF0C\u5C31\u662F\u6307\u89E6\u53D1\u65F6\u95F4\u540E\u5728\u89C4\u5B9A\u65F6\u95F4\u5185\u51FD\u6570\u53EA\u80FD\u6267\u884C\u4E00\u6B21\uFF0C\u5982\u679C\u5728\u89C4\u5B9A\u65F6\u95F4\u5185\u53C8\u89E6\u53D1\u4E86\u4E8B\u4EF6\uFF0C\u5219\u4F1A\u91CD\u65B0\u8BA1\u7B97\u51FD\u6570\u6267\u884C\u65F6\u95F4\u3002</p><p><strong>\u5B9E\u73B0</strong></p><div class="language-js"><pre><code><span class="token keyword">function</span> <span class="token function">debounce</span><span class="token punctuation">(</span><span class="token parameter">fn<span class="token punctuation">,</span> delay</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token keyword">let</span> timer<span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token function">clearTimeout</span><span class="token punctuation">(</span>timer<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//\u89E6\u53D1\u51FD\u6570\u65F6, \u91CD\u7F6E</span>
    timer <span class="token operator">=</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
      <span class="token function">fn</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> arguments<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> delay<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u5E94\u7528\u573A\u666F (\u8FDE\u7EED\u4E8B\u4EF6\u89E6\u53D1\u4E00\u6B21)</p><ul><li>\u641C\u7D22\u6846\u641C\u7D22\u8F93\u5165\u3002\u53EA\u9700\u7528\u6237\u6700\u540E\u4E00\u6B21\u8F93\u5165\u5B8C\uFF0C\u518D\u53D1\u9001\u8BF7\u6C42</li><li>\u624B\u673A\u53F7\u3001\u90AE\u7BB1\u9A8C\u8BC1\u8F93\u5165\u68C0\u6D4B</li><li>\u7A97\u53E3\u5927\u5C0FResize\u3002\u53EA\u9700\u7A97\u53E3\u8C03\u6574\u5B8C\u6210\u540E\uFF0C\u8BA1\u7B97\u7A97\u53E3\u5927\u5C0F\u3002\u9632\u6B62\u91CD\u590D\u6E32\u67D3\u3002</li></ul><h3 id="_8-2-\u8282\u6D41-throttle" tabindex="-1">8.2 \u8282\u6D41(throttle) <a class="header-anchor" href="#_8-2-\u8282\u6D41-throttle" aria-hidden="true">#</a></h3><p>\u9650\u5236\u4E00\u4E2A\u51FD\u6570\u5728\u89C4\u5B9A\u65F6\u95F4\u5185\u53EA\u80FD\u6267\u884C\u4E00\u6B21\u3002\u5373\u8FDE\u7EED\u89E6\u53D1\u4E8B\u4EF6\u65F6\uFF0C\u5728 n \u79D2\u4E2D\u53EA\u6267\u884C\u4E00\u6B21\u51FD\u6570\u3002</p><p><strong>\u5B9E\u73B0</strong></p><div class="language-js"><pre><code><span class="token keyword">function</span> <span class="token function">throttle</span><span class="token punctuation">(</span><span class="token parameter">fn<span class="token punctuation">,</span> delay</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token keyword">let</span> isAvaliabed <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">const</span> self <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>isAvaliabed<span class="token punctuation">)</span><span class="token punctuation">{</span>
      self<span class="token punctuation">.</span>isAvaliabed <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
      <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
        <span class="token function">fn</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> arguments<span class="token punctuation">)</span><span class="token punctuation">;</span>
        self<span class="token punctuation">.</span>isAvaliabled <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span> delay<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u65F6\u95F4\u6233\u5199\u6CD5\uFF1A\u7B2C\u4E00\u6B21\u4F1A\u6267\u884C\uFF0C\u5B9A\u65F6\u5668\u5199\u6CD5\uFF1A\u6700\u540E\u4E00\u6B21\u70B9\u51FB\uFF0C\u8FD8\u662F\u4F1A\u91CD\u65B0\u8BA1\u65F6\uFF0C\u7EFC\u5408\u5982\u4E0B</span>
<span class="token keyword">function</span> <span class="token function">throttle</span><span class="token punctuation">(</span><span class="token parameter">fn<span class="token punctuation">,</span> delay</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token keyword">let</span> timer <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> startTime <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">let</span> context <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> args <span class="token operator">=</span> arguments<span class="token punctuation">;</span>
    <span class="token keyword">let</span> currTime <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> remain <span class="token operator">=</span> delay <span class="token operator">-</span> <span class="token punctuation">(</span> curTime <span class="token operator">-</span> startTime <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">clearTimeout</span><span class="token punctuation">(</span>timer<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>remain <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token function">fn</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> arguments<span class="token punctuation">)</span>
        startTime <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
      timer <span class="token operator">=</span>  <span class="token function">setTimeout</span><span class="token punctuation">(</span>fn<span class="token punctuation">,</span> remain<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre></div><p>\u5E94\u7528\u573A\u666F</p><ul><li>\u6EDA\u52A8\u52A0\u8F7D\uFF0C\u52A0\u8F7D\u66F4\u591A\u6216\u6EDA\u52A8\u5E95\u90E8\u76D1\u542C</li><li>\u8C37\u6B4C\u641C\u7D22\u6846\uFF0C\u641C\u7D22\u8054\u60F3\u529F\u80FD</li><li>\u9AD8\u9891\u70B9\u51FB\u63D0\u4EA4\uFF0C\u8868\u5355\u91CD\u590D\u63D0\u4EA4\u3002</li></ul><h3 id="_8-3-\u5176\u4ED6" tabindex="-1">8.3 \u5176\u4ED6 <a class="header-anchor" href="#_8-3-\u5176\u4ED6" aria-hidden="true">#</a></h3><ul><li><p>\u5757\u7EA7\uFF1A div p ul li form h</p></li><li><p>\u884C\u5185\uFF1A em span a strong label</p></li><li><p>W3C\u6A21\u578B\uFF1Awidth = content\uFF1B IE\u6A21\u578B\uFF1Awidth = padding+broder+content</p></li><li><p>\u6BD4\u8F83\u5927\u7684JS\u3001CSS\u6587\u4EF6\u4F1A\u4E22\u8FDB\u78C1\u76D8\uFF0C\u53CD\u4E4B\u4E22\u8FDB\u5185\u5B58\uFF1B\u5185\u5B58\u4F7F\u7528\u7387\u6BD4\u8F83\u9AD8\u7684\u65F6\u5019\uFF0C\u6587\u4EF6\u4F18\u5148\u8FDB\u5165\u78C1\u76D8\uFF1B</p><p>BFC(block formatting context) \u5757\u7EA7\u683C\u5F0F\u5316\u4E0A\u4E0B\u6587 \u5185\u90E8\u7684box\u4F1A\u5728\u5782\u76F4\u65B9\u5411\u4E0A\uFF0C\u4E00\u4E2A\u63A5\u4E00\u4E2A\u7684\u653E\u7F6E Box\u5782\u76F4\u65B9\u5411\u7684\u8DDD\u79BB\u7531margin\u51B3\u5B9A\uFF0C\u5C5E\u4E8E\u540C\u4E00\u4E2ABFC\u7684\u4E24\u4E2A\u76F8\u90BBbox\u7684margin\u4F1A\u53D1\u751F\u91CD\u53E0 BFC\u533A\u57DF\u4E0D\u4F1A\u4E0Efloat box\u91CD\u53E0 BFC\u5C31\u662F\u9875\u9762\u4E0A\u4E00\u4E2A\u9694\u79BB\u7684\u72EC\u7ACB\u5BB9\u5668\uFF0C\u5BB9\u5668\u91CC\u9762\u7684\u5B50\u5143\u7D20\u4E0D\u4F1A\u5F71\u54CD\u5230\u5916\u9762\u7684\u5143\u7D20\u3002</p><p>\u5229\u7528BFC\u907F\u514Dmargin\u91CD\u53E0\uFF0C\u5916\u5C42\u7528div\u5305\u88F9 \u6E05\u9664\u6D6E\u52A8\uFF1Aoverflow: hidden</p></li><li><p>\u8FDB\u7A0B\uFF1ACPU\u8D44\u6E90\u5206\u914D\u6700\u5C0F\u5355\u4F4D\uFF0C\u53EF\u5305\u542B\u591A\u4E2A\u7EBF\u7A0B</p></li><li><p>\u7EBF\u7A0B\uFF1ACPU\u8C03\u5EA6\u7684\u6700\u5C0F\u5355\u4F4D\uFF0C\u540C\u8FDB\u7A0B\u4E0B\u7684\u7EBF\u7A0B\u5171\u4EAB\u7A0B\u5E8F\u7684\u5185\u5B58\u7A7A\u95F4</p></li></ul><p>sort\u6392\u5E8F\u9700\u8981\u6307\u5B9A\u5165\u53C2 nums.sort((a,b)=&gt;{return a-b}), \u76F4\u63A5\u5728nums\u4E0A\u8FDB\u884C\u6392\u5E8F</p><h2 id="js-\u624B\u5199" tabindex="-1">JS \u624B\u5199 <a class="header-anchor" href="#js-\u624B\u5199" aria-hidden="true">#</a></h2><p>// \u7C7B\u6570\u7EC4\u8F6C\u5316\u4E3A\u6570\u7EC4</p><div class="language-js"><pre><code><span class="token keyword">const</span> <span class="token function-variable function">toArr</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">likeArr</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> a1 <span class="token operator">=</span> Array<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>likeArr<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> a2 <span class="token operator">=</span> <span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>likeArr<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> a3 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>likeArr<span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> a4 <span class="token operator">=</span> <span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> likeArr<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre></div><p>// \u51FD\u6570\u73C2\u91CC\u5316</p><div class="language-js"><pre><code><span class="token keyword">function</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>args</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> totalArgs <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>args<span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">function</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>args2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    totalArgs<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token operator">...</span>args2<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> f<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  f<span class="token punctuation">.</span><span class="token function-variable function">toString</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> totalArgs<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">prev<span class="token punctuation">,</span> curr</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> prev <span class="token operator">+</span> curr<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> f<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// console.log(add(1, 2, 3)(4)(5).toString());</span>
</code></pre></div><p>// \u56FE\u7247\u61D2\u52A0\u8F7D</p><div class="language-js"><pre><code><span class="token keyword">function</span> <span class="token function">lazyload</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> imgs <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelectorAll</span><span class="token punctuation">(</span><span class="token string">&quot;img&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// \u89C6\u53E3\u9AD8\u5EA6</span>
  <span class="token keyword">const</span> viewHeight <span class="token operator">=</span> document<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span>clientHeight<span class="token punctuation">;</span>
  <span class="token comment">// \u6EDA\u52A8\u6761\u9AD8\u5EA6</span>
  <span class="token keyword">const</span> scrollHeight <span class="token operator">=</span>
    document<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span>scrollTop <span class="token operator">||</span> document<span class="token punctuation">.</span>body<span class="token punctuation">.</span>scrollTop<span class="token punctuation">;</span>
  <span class="token comment">// \u6574\u4E2A\u9875\u9762\u9AD8\u5EA6</span>
  <span class="token comment">// document.documentElement.scrollHeight</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> imgs<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> offsetTop <span class="token operator">=</span> imgs<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>offsetTop<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>offsetTop <span class="token operator">&lt;</span> viewHeight <span class="token operator">+</span> scrollHeight<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      imgs<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>src <span class="token operator">=</span> imgs<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>dataset<span class="token punctuation">.</span>src<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><h2 id="\u624B\u5199-promise" tabindex="-1">\u624B\u5199 Promise <a class="header-anchor" href="#\u624B\u5199-promise" aria-hidden="true">#</a></h2><div class="language-js"><pre><code><span class="token comment">// \u4E09\u79CD\u72B6\u6001 \u4E0D\u53EF\u9006</span>
<span class="token keyword">const</span> <span class="token constant">ENUM</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token constant">PENDING</span><span class="token operator">:</span> <span class="token string">&#39;pending&#39;</span><span class="token punctuation">,</span>
    <span class="token constant">FULLFILLED</span><span class="token operator">:</span> <span class="token string">&#39;fullfilled&#39;</span><span class="token punctuation">,</span>
    <span class="token constant">REJECTED</span><span class="token operator">:</span> <span class="token string">&#39;rejected&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
<span class="token keyword">class</span> <span class="token class-name">myPromise</span><span class="token punctuation">{</span>
    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">exector</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">=</span> <span class="token constant">ENUM</span><span class="token punctuation">.</span><span class="token constant">PENDING</span><span class="token punctuation">;</span> <span class="token comment">//\u72B6\u6001\u6807\u8BC6</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>     <span class="token comment">//\u6210\u529F\u8FD4\u56DE\u503C</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>reason <span class="token operator">=</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>    <span class="token comment">//\u5931\u8D25\u8BF4\u660E</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>onRejectedCb <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>     <span class="token comment">//\u6210\u529F\u56DE\u8C03\u6570\u7EC4</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>onFullFilledCb <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>   <span class="token comment">//\u5931\u8D25\u56DE\u8C03\u6570\u7EC4</span>

        <span class="token keyword">try</span><span class="token punctuation">{</span>
            <span class="token function">exector</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token keyword">catch</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>reason <span class="token operator">=</span> e<span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">=</span> <span class="token constant">ENUM</span><span class="token punctuation">.</span><span class="token constant">REJECTED</span><span class="token punctuation">;</span>
            <span class="token function">reject</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">const</span> <span class="token function-variable function">resolve</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token constant">ENUM</span><span class="token punctuation">.</span><span class="token constant">PENDING</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token keyword">this</span><span class="token punctuation">.</span>value <span class="token operator">=</span> value<span class="token punctuation">;</span>
                <span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">=</span> <span class="token constant">ENUM</span><span class="token punctuation">.</span><span class="token constant">FULLFILLED</span><span class="token punctuation">;</span>
                <span class="token comment">//\u4F9D\u6B21\u6267\u884C\u6210\u529F\u72B6\u6001\u56DE\u8C03\u51FD\u6570</span>
                <span class="token keyword">this</span><span class="token punctuation">.</span>onFullFilledCb<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">cb</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
                    <span class="token function">cb</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">const</span> <span class="token function-variable function">reject</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">reason</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token constant">ENUM</span><span class="token punctuation">.</span><span class="token constant">PENDING</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token keyword">this</span><span class="token punctuation">.</span>reason <span class="token operator">=</span> reason<span class="token punctuation">;</span>
                <span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">=</span> <span class="token constant">ENUM</span><span class="token punctuation">.</span><span class="token constant">REJECTED</span><span class="token punctuation">;</span>
                <span class="token comment">//\u4F9D\u6B21\u6267\u884C\u5931\u8D25\u72B6\u6001\u56DE\u8C03\u51FD\u6570</span>
                <span class="token keyword">this</span><span class="token punctuation">.</span>onRejectedCb<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">cb</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
                    <span class="token function">cb</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>reason<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span> 

<span class="token comment">// Promise.then\u5B9E\u73B0</span>
<span class="token comment">// then\u65B9\u6CD5\u4F20\u5165\u4E24\u4E2A\u53C2\u6570 onFulfilled, onRejected</span>
myPromise<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">then</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">onFulfilled<span class="token punctuation">,</span> onRejected</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token comment">//\u5165\u53C2\u5F02\u5E38\u5904\u7406</span>
    onFulfilled <span class="token operator">=</span> <span class="token keyword">typeof</span> onFulfilled <span class="token operator">===</span> <span class="token string">&quot;function&quot;</span> <span class="token operator">?</span> <span class="token function-variable function">onFulfilled</span> <span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">v</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> v<span class="token punctuation">;</span>
    onRejected <span class="token operator">=</span>
        <span class="token keyword">typeof</span> onRejected <span class="token operator">===</span> <span class="token string">&quot;function&quot;</span>
        <span class="token operator">?</span> <span class="token function-variable function">onRejected</span>
        <span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">reason</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span>reason <span class="token keyword">instanceof</span> <span class="token class-name">Error</span> <span class="token operator">?</span> reason<span class="token punctuation">.</span>message <span class="token operator">:</span> reason<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">;</span>

    <span class="token comment">// \u4FDD\u5B58this</span>
    <span class="token keyword">const</span> self <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">myPromise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>self<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token constant">ENUM</span><span class="token punctuation">.</span><span class="token constant">PENDING</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        self<span class="token punctuation">.</span>onFullFilledCb<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
              <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token function">onFulfilled</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
              result <span class="token keyword">instanceof</span> <span class="token class-name">myPromise</span>
                <span class="token operator">?</span> result<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span>
                <span class="token operator">:</span> <span class="token function">resolve</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">reject</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        self<span class="token punctuation">.</span>onRejectedCb<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
              <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token function">onRejected</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>reason<span class="token punctuation">)</span><span class="token punctuation">;</span>
              result <span class="token keyword">instanceof</span> <span class="token class-name">myPromise</span>
                <span class="token operator">?</span> result<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span>
                <span class="token operator">:</span> <span class="token function">resolve</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">reject</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>self<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token constant">ENUM</span><span class="token punctuation">.</span><span class="token constant">FULFILLED</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
          <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token function">onFulfilled</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
            result <span class="token keyword">instanceof</span> <span class="token class-name">myPromise</span>
              <span class="token operator">?</span> result<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span>
              <span class="token operator">:</span> <span class="token function">resolve</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token function">reject</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>self<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token constant">ENUM</span><span class="token punctuation">.</span><span class="token constant">REJECTED</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
          <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token function">onRejected</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>reason<span class="token punctuation">)</span><span class="token punctuation">;</span>
            result <span class="token keyword">instanceof</span> <span class="token class-name">myPromise</span>
              <span class="token operator">?</span> result<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span>
              <span class="token operator">:</span> <span class="token function">resolve</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token function">reject</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
myPromise<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">all</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">arrList</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token comment">//\u5165\u53C2\u5F02\u5E38\u5904\u7406</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>arrList<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> type <span class="token operator">=</span> <span class="token keyword">typeof</span> arrList<span class="token punctuation">;</span>
      <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">TypeError</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">TypeError: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>type<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>arrList<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> is not iterable</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">myPromise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> backArr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
      <span class="token keyword">const</span> count <span class="token operator">=</span> <span class="token number">0</span>
      <span class="token keyword">const</span> <span class="token function-variable function">processResultByKey</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">value<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          backArr<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">=</span> value
          <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">++</span>count <span class="token operator">===</span> arrList<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
              <span class="token function">resolve</span><span class="token punctuation">(</span>backArr<span class="token punctuation">)</span>
          <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arrList<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">const</span> item <span class="token operator">=</span> arrList<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span>item <span class="token operator">&amp;&amp;</span> item<span class="token punctuation">.</span>then <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
              item<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                  <span class="token function">processResultByKey</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span> i<span class="token punctuation">)</span>
              <span class="token punctuation">}</span><span class="token punctuation">,</span> reject<span class="token punctuation">)</span>
          <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
              <span class="token function">processResultByKey</span><span class="token punctuation">(</span>item<span class="token punctuation">,</span> i<span class="token punctuation">)</span>
          <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre></div><p>##\u6570\u7EC4\u5E38\u7528\u65B9\u6CD5</p><p>pop\u3001push\u3001reverse\u3001shift\u3001sort\u3001concat\u3001join\u3001toString\u3001indexOf\u3001map(value, key)</p><p>indexOf() \u65B9\u6CD5\u53EF\u8FD4\u56DE\u67D0\u4E2A\u6307\u5B9A\u7684\u5B57\u7B26\u4E32\u503C\u5728\u5B57\u7B26\u4E32\u4E2D\u9996\u6B21\u51FA\u73B0\u7684\u4F4D\u7F6E\uFF08\u5927\u5C0F\u5199\u654F\u611F\uFF09\u3002</p><ol><li>splice</li></ol><p>\u65B9\u6CD5\u5411/\u4ECE\u6570\u7EC4\u4E2D\u6DFB\u52A0/\u5220\u9664\u9879\u76EE\uFF0C\u7136\u540E\u8FD4\u56DE\u88AB\u5220\u9664\u7684\u9879\u76EE</p><div class="language-js"><pre><code><span class="token comment">/*
  index: \u5FC5\u9700\u3002\u6574\u6570\uFF0C\u89C4\u5B9A\u6DFB\u52A0/\u5220\u9664\u9879\u76EE\u7684\u4F4D\u7F6E\uFF0C\u4F7F\u7528\u8D1F\u6570\u53EF\u4ECE\u6570\u7EC4\u7ED3\u5C3E\u5904\u89C4\u5B9A\u4F4D\u7F6E\u3002
  howMany: \u5FC5\u9700\u3002\u8981\u5220\u9664\u7684\u9879\u76EE\u6570\u91CF\u3002\u5982\u679C\u8BBE\u7F6E\u4E3A 0\uFF0C\u5219\u4E0D\u4F1A\u5220\u9664\u9879\u76EE\u3002
  item1:  ..., itemX	\u53EF\u9009\u3002\u5411\u6570\u7EC4\u6DFB\u52A0\u7684\u65B0\u9879\u76EE\u3002
*/</span> 
<span class="token function">splice</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span> howMany<span class="token punctuation">,</span> item1<span class="token punctuation">,</span> <span class="token operator">...</span><span class="token punctuation">,</span> itemX<span class="token punctuation">)</span> 
</code></pre></div><ol start="2"><li>slice</li></ol><p>\u4ECE\u5DF2\u6709\u7684\u6570\u7EC4\u4E2D\u8FD4\u56DE\u9009\u5B9A\u7684\u5143\u7D20</p><div class="language-js"><pre><code><span class="token comment">/*
  start: \u89C4\u5B9A\u4ECE\u4F55\u5904\u5F00\u59CB\u9009\u53D6\u3002\u5982\u679C\u662F\u8D1F\u6570\uFF0C\u90A3\u4E48\u5B83\u89C4\u5B9A\u4ECE\u6570\u7EC4\u5C3E\u90E8\u5F00\u59CB\u7B97\u8D77\u7684\u4F4D\u7F6E, -1\u6307\u6700\u540E\u4E00\u4E2A\u5143\u7D20
  end: \u53EF\u9009\u3002\u89C4\u5B9A\u4ECE\u4F55\u5904\u7ED3\u675F\u9009\u53D6\u3002\u8BE5\u53C2\u6570\u662F\u6570\u7EC4\u7247\u65AD\u7ED3\u675F\u5904\u7684\u6570\u7EC4\u4E0B\u6807\u3002\u5982\u679C\u6CA1\u6709\u6307\u5B9A\u8BE5\u53C2\u6570\uFF0C\u90A3\u4E48\u5207\u5206\u7684\u6570\u7EC4\u5305\u542B\u4ECE start \u5230\u6570\u7EC4\u7ED3\u675F\u7684\u6240\u6709\u5143\u7D20\u3002
*/</span> 
<span class="token function">slice</span><span class="token punctuation">(</span>start<span class="token punctuation">,</span> end<span class="token punctuation">)</span> 
</code></pre></div><ol start="3"><li>unshift</li></ol><p>\u5411\u6570\u7EC4\u7684\u5F00\u5934\u6DFB\u52A0\u4E00\u4E2A\u6216\u66F4\u591A\u5143\u7D20(\u6539\u53D8\u539F\u6570\u7EC4)\uFF0C\u5E76\u8FD4\u56DE\u65B0\u7684\u6570\u7EC4</p><div class="language-js"><pre><code><span class="token comment">/*
  newelement1~X\uFF1A\u5411\u6570\u7EC4\u6DFB\u52A0\u7684\u7B2C\u4E00\u5230N\u4E2A\u5143\u7D20
*/</span> 
<span class="token function">unshift</span><span class="token punctuation">(</span>newelement1<span class="token punctuation">,</span>newelement2<span class="token punctuation">,</span><span class="token operator">...</span><span class="token punctuation">.</span><span class="token punctuation">,</span>newelementX<span class="token punctuation">)</span>
</code></pre></div><ol start="4"><li>reduce</li></ol><div class="language-js"><pre><code><span class="token comment">/*
  reduce() \u65B9\u6CD5\u63A5\u6536\u4E00\u4E2A\u51FD\u6570\u4F5C\u4E3A\u7D2F\u52A0\u5668\uFF0C\u6570\u7EC4\u4E2D\u7684\u6BCF\u4E2A\u503C\uFF08\u4ECE\u5DE6\u5230\u53F3\uFF09\u5F00\u59CB\u7F29\u51CF\uFF0C\u6700\u7EC8\u8BA1\u7B97\u4E3A\u4E00\u4E2A\u503C
  total	\u5FC5\u9700\u3002\u521D\u59CB\u503C, \u6216\u8005\u8BA1\u7B97\u7ED3\u675F\u540E\u7684\u8FD4\u56DE\u503C\u3002
  currentValue	\u5FC5\u9700\u3002\u5F53\u524D\u5143\u7D20
  currentIndex	\u53EF\u9009\u3002\u5F53\u524D\u5143\u7D20\u7684\u7D22\u5F15
  arr	\u53EF\u9009\u3002\u5F53\u524D\u5143\u7D20\u6240\u5C5E\u7684\u6570\u7EC4\u5BF9\u8C61\u3002
  initialValue	\u53EF\u9009\u3002\u4F20\u9012\u7ED9\u51FD\u6570\u7684\u521D\u59CB\u503C
*/</span> 
<span class="token function">reduce</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">total<span class="token punctuation">,</span> currentValue<span class="token punctuation">,</span> currentIndex<span class="token punctuation">,</span> arr</span><span class="token punctuation">)</span><span class="token punctuation">,</span> initialValue<span class="token punctuation">)</span>
</code></pre></div><p><a href="https://codesandbox.io/s/javascript-shouxieti-rfo2c?file=/src/index.js" target="_blank" rel="noopener noreferrer">https://codesandbox.io/s/javascript-shouxieti-rfo2c?file=/src/index.js</a></p><h1 id="qa" tabindex="-1">QA <a class="header-anchor" href="#qa" aria-hidden="true">#</a></h1><ol><li><p>class P{}; console.log(P._<em>proto</em>_)</p><p>\u6BCF\u4E2A\u5BF9\u8C61\u90FD\u6709__proto__\u7684\u5C5E\u6027\uFF0C\u5927\u591A\u60C5\u51B5\u4E0B\u6307\u5411\u6784\u9020\u51FD\u6570\u7684\u539F\u578B. <br> \u6BCF\u4E2A\u51FD\u6570\u90FD\u6709\u4E00\u4E2Aprototype\u5C5E\u6027\uFF0C\u8FD9\u4E2A\u5C5E\u6027\u6307\u5411\u51FD\u6570\u7684\u539F\u578B\u5BF9\u8C61. <br> class\u5B9E\u9645\u662Ffunction\u7684\u8BED\u6CD5\u7CD6, P.<strong>proto</strong> \u5B9E\u9645\u662FFunction.prototype. <br></p></li></ol>`,97),e=[o];function c(u,l,k,i,r,d){return a(),s("div",null,e)}var y=n(p,[["render",c]]);export{f as __pageData,y as default};
